#Move

Action Move Track t Container c MovePhase p
  require: not in m.in null
  effect: put m.in m
  effect: put c Token Rand(0,5)
  effect: delete p
  effect: create UseTokensPhase


#UseTokens

Action SpendToken Marker m Container c UseTokensPhase p
  require: not in m.in null #Can this sort of check be automated?
  require: has c Token
  effect: put m.in m
  effect: remove Token c 1 #How to best format this?

Action Transition Container c UseTokensPhase p
  require: not has c Token
  effect: delete p
  effect: create SpacePhase

Action StopAtRoom Container c Marker m UseTokensPhase p
  require: in m Room
  effect: remove Token c all


#Space

Action DrawAsset Container c Marker m SpacePhase p
  require: has c Asset
  require: has m.in GreenCell
  effect: distribute c player Asset 1 rand
  effect: delete p
  effect: create MovePhase
  effect: Players Current.Left

Action LoseAsset Marker m SpacePhase p Asset a
  require: has m.in RedCell
  effect: delete a
  effect: delete p
  effect: create MovePhase
  effect: Players Current.Left

Action EnterRoom Marker m SpacePhase p Container c
  require: has m.in RoomCell
  require: has c Question 15
  effect: distribute c All Question 15 rand
  effect: delete p
  effect: create SelectPhase


#SelectRoom

Action SelectRoom SelectPhase p Container c ActiveRoomHolder a
  require: not has a Room
  effect: takeput c a Room 1 rand
  effect: delete p
  effect: create RoomPhase

Action RejectRoom SelectPhase p Container c ActiveRoomHolder a Room r
  require: in r a
  effect: delete r
  effect: takeput c a Room 1 rand

Action SelectRoom SelectPhase p ActiveRoomHolder a
  require: has a Room
  effect: delete p
  effect: create RoomPhase
  effect: Players All


#StartTimer

Action StartTimer StartTimerPhase p
  effect: set timer 120         #set timer for 2 minutes
  effect: delete p
  effect: create QuestionPhase


#Question

Action AskQuestion QuestionPhase p Container c Question q
  require: timer > 0
  require: owns player q
  effect: put c q
  effect: disown q

Action FinishQuestioning QuestionPhase p
  effect: take Current Question all
  effect: delete p
  effect: create RoomPhase


#Room

Action SendAsset RoomPhase p MissionSlots m Asset a
  require: owns player a
  require: has m Asset < 3      #m has fewer than three Assets
  effect: put m a

Action RecallAsset RoomPhase p MissionSlots m Asset a
  require: in a m
  effect: take m a

Action LockInAssets RoomPhase p
  effect: delete p
  effect: create ResolvePhase


#Resolve

Action Succeed ResolvePhase p ActiveRoomHolder a Room r MissionSlots m
  require: in r a
  require: rhas m r.has         #a recursive has
  effect: delete p
  effect: create GetAntidotesPhase

Action Fail ResolvePhase p ActiveRoomHolder a Room r MissionSlots m
  require: in r a
  require: not rhas m r.has     #a recursive has
  effect: delete r
  effect: delete a.has     #Delete all assets in a
  effect: delete p
  effect: create RefillAssetsPhase


#GetAntidotes

Action DrawAntidote GetAntidotesPhase p Container c ActiveRoomHolder a Room r
  require: in r a
  require: has r Object a'      #Here Object indicates "any type"
  effect: delete a'
  effect: put c Antidote Rand(0, 1)

Action FinishDrawing GetAntidotesPhase p ActiveRoomHolder a Room r
  require: in r a
  require: has r Object = 0          #Room has zero objects in it
  effect: delete r
  effect: delete p
  effect: create MovePhase
  effect: Players Former.Left


#RefillAssets

Action RefillAssets RefillAssetsPhase p Container c
  require: owns player Asset < 3
  effect: distribute c player Asset 1 rand

Action EndRefill RefillAssetsPhase p
  effect: Players Former.Left
  effect: delete p
  effect: create MovePhase
